name: publish python package to PyPI

on:  # 这里我设置了两个事件，一般的push tag以v开头，用来测试发布，而release用来正式发布
  release:
    types: [published]
  push:
    # Alternative: only build for tags.
    tags:
      - 'v*'
jobs:
  build_wheels:  # 这里分别用了别人现成的脚本来在多平台上编译，实际上这个任务要在每个os上面都跑一遍
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        include:
          # Windows ARM64 support
          - os: windows-latest
            arch: ARM64
          # macOS ARM64 support
          - os: macos-latest
            arch: arm64
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: build wheels
      uses: pypa/cibuildwheel@v2.23.0
      env:
        CIBW_BUILD_FRONTEND: build
        CIBW_SKIP: "*-win32 *-manylinux_i686 pp*"  # 按照这里的设置，所有允许的python版本都要执行64位编译
        CIBW_ARCHS_WINDOWS: ${{ matrix.arch || 'AMD64' }}
        CIBW_ARCHS_MACOS: ${{ matrix.arch || 'x86_64' }}

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  build_sdist:  # 源代码打包单平台即可
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload:  # 上传到PyPI，注意我这里需要在前两个任务完成的情况下才能执行
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest  # 这里也是只用一个系统，否则会有问题
    environment: pypi
    permissions:
      id-token: write  # 这里很重要，因为启用了PyPI白名单，需要将临时生成的token写到任务程序里
    steps:
    - uses: actions/download-artifact@v4  # 由于这个系统跟前面的不一样，所以前两个任务需要先上载打好的包，这里再下下来
      with:
        # unpacks all CIBW artifacts into dist/
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/

    - name: publish to PYPI
      if: github.event_name == 'release' && github.event.action == 'published'  # 有了这句话才能只在发布的时候执行
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        packages-dir: dist/